@use "sass:math";
@use "./vapor.component.scss" as *;

$glow: 1px 0px;
$window-width: 3.5px;
$window-height: 2px;
$window-h-margin: $window-width + 0.5px;
$window-v-margin: $window-height + 2px;

@function opacity() {
  @return math.div(random(10), 10);
}

@function line-up($rows, $cols) {
  $position: random($rows + 1) * $window-h-margin;
  $start: 1;
  $line: "";
  @if $cols > 0 {
    $start: random($cols);
    $length: random($cols + 1 - $start)- 1;
    $start: $start * $window-h-margin;
    $line: "#{$start} #{$position} #{$glow} rgba(255,255,255, #{opacity()})";
    @for $i from 1 through $length {
      $line: "#{$line}, #{$start + ($window-h-margin * $i)} #{$position} #{$glow} rgba(255,255,255, #{opacity()})";
    }
    $line: "#{$line},";
  }
  @return $line;
}

@function cascade($rows, $cols) {
  $position: random($cols + 1) * $window-v-margin;
  $start: 1;
  $line: "";
  @if $rows > 0 {
    $start: random($rows);
    $length: random($rows + 1 - $start);
    $start: $start * $window-v-margin;
    $line: "#{$position} #{$start} #{$glow} rgba(255,255,255, #{opacity()})";
    @for $i from 1 through $length {
      $line: "#{$line}, #{$position} #{$start + ($window-v-margin * $i)} #{$glow} rgba(255,255,255, #{opacity()})";
    }
  }
  @return $line;
}

@function corner($rows, $cols) {
  $position: random($cols + 1) * $window-h-margin;
  $start: 1;
  $line: "";
  @if $rows > 0 {
    $start: random($rows);
    $length: random($rows + 1 - $start);
    $start: $start * $window-v-margin;
    $line: "#{$position} #{$start} #{$glow} rgba(255,255,255, #{opacity()})";
    @for $i from 1 through $length {
      $line: "#{$line}, #{$position} #{$start + ($window-v-margin * $i)} #{$glow} rgba(255,255,255, #{opacity()})";
    }
    @if $cols > 0 {
      $h-start: random($cols);
      $length: random($cols + 1 - $h-start)- 1;
      $h-start: $h-start * $window-h-margin;
      @for $i from 1 through $length {
        $line: "#{$line}, #{$h-start + ($window-h-margin * $i)} #{$start} #{$glow} rgba(255,255,255, #{opacity()})";
      }
    }
    $line: "#{$line},";
  }
  @return $line;
}

@function windows-box-shadow($rows, $cols, $tall, $fat) {
  //   $divider: 5;
  //   $helper: ceil(math.div($cols * $rows, 3)) - $cols;
  //   @if $helper<=0 {
  //     $helper: 2;
  //   }
  //   $windows-population: random($helper) + $cols;
  $value: "#{corner($rows, $cols)} #{line-up($rows, $cols)} #{cascade($rows, $cols)}";
  //   $value: "#{line-up($tall, $fat)}, #{cascade($tall, $fat)}, #{line-up($tall, $fat)}, #{cascade($tall, $fat)}";
  @return unquote($value);
}

@mixin windowToTheWorld($tall, $fat) {
  .windows-position {
    $window-frame-min: 8px;
    $margin: math.div($window-frame-min, 2);
    $margin-bot: $tall * 0.3;
    $width: $fat - $window-frame-min * 2;
    $height: $tall - $window-frame-min - $margin-bot;
    $rows: floor(math.div($height, $window-v-margin));
    $cols: floor(math.div($width, $window-h-margin));

    width: $width;
    height: $height;
    background: transparent;
    position: absolute;
    bottom: 5px;
    margin: 0 $margin $margin-bot $margin;
    .windows {
      $shadows: windows-box-shadow($rows, $cols, $height, $width);
      width: $window-width;
      height: $window-height;
      background: transparent;
      box-shadow: $shadows;
    }
  }
}
