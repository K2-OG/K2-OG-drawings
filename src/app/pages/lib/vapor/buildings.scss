@use "sass:math";
@use "../../../../common.scss" as *;
@use "./vapor.component.scss" as *;
@use "./windows.scss" as *;
@use "./shadows.scss" as *;
@use "./roofs.scss" as *;

// $border: $shadow-start-color 0.5px solid;
$border: $shadow-start-color 0.5px solid;

@mixin towerLoop($shadow-position) {
  $amount: random(3) + 3;
  @for $i from 1 through $amount {
    .tower:nth-child(#{$i}) {
      display: block;
      $tallness: random(70) + 110px - $i * 15;
      $fatness: random(25) + 15px;
      .roof-container {
        width: $fatness;
      }
      @include buildIt($shadow-position, $tallness, $fatness);
    }
  }
}

@mixin buildItUp($shadow-position, $tallness, $fatness, $total-height) {
  height: ceil($tallness) + 1;
  width: $fatness;
  @if ($total-height > $tallness) {
    @if $fatness >= $antenna-limit {
      top: $building-container-height - $total-height;
      .roof-shadow {
        @include throwSomeShade($tallness, $fatness, $shadow-position);
      }
    } @else {
      top: $building-container-height - $total-height + 2.6px;
    }
  } @else {
    $repeatitions: random(30) + 20;
    $lights: randomLights($repeatitions);
    $lights-position: randomLightsPositions($repeatitions);
    $lights-size: randomLightsSizes($repeatitions);
    background: $lights $building-color;
    $qwer: "#{random(5)}px";
    background-position-x: $lights-position 0;
    background-size: $lights-size 0;
    background-repeat: no-repeat;
    .shadow {
      @include throwSomeShade($tallness, $fatness, $shadow-position);
    }
  }
}

@function randomLightsSizes($repeatitions) {
  $value: 200;
  $min: 135;
  $bg-value: "#{random($value)+$min}% 100%,";
  @for $i from 0 to $repeatitions {
    $bg-value: "#{$bg-value} #{random($value)+$min}% 100%,";
  }
  @return unquote($bg-value);
}

@function randomLightsPositions($repeatitions) {
  $value: 2000;
  $min: -1000;
  $bg-value: "#{random($value)+$min}%,";
  @for $i from 0 to $repeatitions {
    $bg-value: "#{$bg-value} #{random($value)+$min}%,";
  }
  @return unquote($bg-value);
}

@function randomLights($repeatitions) {
  $end-max-value: 20;
  $end-min-value: 30;
  $alpha-value: 10;
  $alpha-min: 15;
  $bg-value: "radial-gradient(ellipse at bottom, rgba(#{randomColor()}, #{random($alpha-value)+$alpha-min}%), transparent #{random($end-max-value)+$end-min-value}%),";
  @for $i from 0 to $repeatitions {
    $bg-value: "#{$bg-value} radial-gradient(ellipse at bottom, rgba(#{randomColor()}, #{random($alpha-value)+$alpha-min}%), transparent #{random($end-max-value)+$end-min-value}%), ";
  }
  @return unquote($bg-value);
}

@mixin buildIt($shadow-position, $tallness, $fatness) {
  @include buildItUp($shadow-position, $tallness, $fatness, $tallness);
  @include windowToTheWorld($tallness, $fatness);
  @include demRoofies($shadow-position, $tallness, $fatness);
  $total-height: $tallness;
}

$vertical-position: 52px;
.buildings-container {
  position: absolute;
  width: $size;
  height: $building-container-height;
  transform: translateY($vertical-position);
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  -webkit-box-reflect: below -1px linear-gradient(transparent 80%, rgba(0, 0, 0, 0.5));
  .buildings {
    display: flex;
    align-items: flex-end;
    // $perspe: 2000px;
    // -webkit-perspective: $perspe;
    // perspective: $perspe;
    // -webkit-transform-style: preserve-3d;
    // transform-style: preserve-3d;
    .layer {
      display: flex;
      align-items: flex-end;
      width: 100%;
      height: 100%;
      //   &.second-layer {
      //     display: none;
      //     transform: translateZ(-500px) translateY(-150px);
      //     -webkit-transform-style: preserve-3d;
      //     transform-style: preserve-3d;
      //   }
    }
    &.lefties {
      .layer {
        flex-direction: row;
        @include towerLoop("right");
        &.first-layer {
        }
        // &.second-layer {
        // @include towerLoop("right");
        // }
      }
    }
    &.righties {
      .layer {
        flex-direction: row-reverse;
        @include towerLoop("left");
        &.first-layer {
        }
        // &.second-layer {
        //   @include towerLoop("left");
        // }
      }
    }
    .tower {
      display: none;
      .roof-container {
        display: flex;
        justify-content: center;
        .roof {
          background: $building-color;
          z-index: -1;
          position: absolute;
          display: none;
        }
      }
    }
  }
}
